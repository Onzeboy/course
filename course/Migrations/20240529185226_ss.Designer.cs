// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using course.Models;

#nullable disable

namespace course.Migrations
{
    [DbContext(typeof(DeliveryDBContext))]
    [Migration("20240529185226_ss")]
    partial class ss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("course.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ProductsHistoryID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductsID")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductsHistoryID");

                    b.HasIndex("ProductsID");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("course.Models.CartHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ProductsHistoryID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("cartID")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductsHistoryID");

                    b.ToTable("carthistory");
                });

            modelBuilder.Entity("course.Models.History", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("adresscity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adresshome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adressstreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("orderdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("history");
                });

            modelBuilder.Entity("course.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("adresscity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adresshome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adressstreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("orderdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("course.Models.Products", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NameP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("product");
                });

            modelBuilder.Entity("course.Models.ProductsHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NameP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("producthistory");
                });

            modelBuilder.Entity("course.Models.Cart", b =>
                {
                    b.HasOne("course.Models.ProductsHistory", "ProductsHistory")
                        .WithMany("Cart")
                        .HasForeignKey("ProductsHistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("course.Models.Products", null)
                        .WithMany("Cart")
                        .HasForeignKey("ProductsID");

                    b.Navigation("ProductsHistory");
                });

            modelBuilder.Entity("course.Models.CartHistory", b =>
                {
                    b.HasOne("course.Models.ProductsHistory", "ProductsHistory")
                        .WithMany("CartHistory")
                        .HasForeignKey("ProductsHistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsHistory");
                });

            modelBuilder.Entity("course.Models.History", b =>
                {
                    b.HasOne("course.Models.Order", null)
                        .WithMany("History")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("course.Models.Order", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("course.Models.Products", b =>
                {
                    b.Navigation("Cart");
                });

            modelBuilder.Entity("course.Models.ProductsHistory", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("CartHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
